@page "/AddTodo"
@using Domain.Models
@using Domain.Contracts
@inject ITodoHome TodoHome
@inject NavigationManager NavMgr
<h3>AddTodo</h3>
<div class="box">
    <EditForm Model="@newTodoItem" OnValidSubmit="@addNewTodo">
        <DataAnnotationsValidator/>
        <ValidationSummary/>
        <div class="form-group field">
            <span>
                <label> User Id :</label>
            </span>
            <span>
                <InputNumber @bind-Value="newTodoItem.OwnerId"/>
            </span>
        </div>
        <div class="form-group field">
            <span>
                <label> Title:</label>
            </span>
            <span>
                <InputTextArea rows="4" @bind-Value="newTodoItem.Title"/>
            </span>
        </div>
        <p class="actions">
            <button class="btn btn-outline-dark acceptbtn" type="submit"> Create</button>
        </p>
    </EditForm>
    <label> @errorLabel</label>
</div>


@code {
    private Todo newTodoItem = new Todo();
    private string errorLabel;

    private async Task addNewTodo() {
        errorLabel = "";
        try {
            await TodoHome.AddAsync(newTodoItem);
        }
        catch (Exception e) {
            errorLabel = e.Message;
            return;
        }
        NavMgr.NavigateTo("/Todos");
    }

}